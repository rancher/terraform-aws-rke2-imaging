# get current branch in git repo
function parse_git_branch() {
    BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
    if [ ! "${BRANCH}" == "" ]
    then
        STAT=`parse_git_dirty`
        echo "[${BRANCH}${STAT}]"
    else
        echo ""
    fi
}

# get current status of git repo
function parse_git_dirty {
    status=`git status 2>&1 | tee`
    dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
    untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
    ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
    newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
    renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
    deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
    bits=''
    if [ "${renamed}" == "0" ]; then
        bits=">${bits}"
    fi
    if [ "${ahead}" == "0" ]; then
        bits="*${bits}"
    fi
    if [ "${newfile}" == "0" ]; then
        bits="+${bits}"
    fi
    if [ "${untracked}" == "0" ]; then
        bits="?${bits}"
    fi
    if [ "${deleted}" == "0" ]; then
        bits="x${bits}"
    fi
    if [ "${dirty}" == "0" ]; then
        bits="!${bits}"
    fi
    if [ ! "${bits}" == "" ]; then
        echo " ${bits}"
    else
        echo ""
    fi
}

function encrypt_secrets() {
  workspace="$(git rev-parse --show-toplevel)";
  dir="$(pwd)";
  cd "$workspace";
  while read -r file; do
    if [ -f "$file" ]; then
      if [ -f "$file.backup" ]; then
        rm -rf "$file.backup"
        cp "$file" "$file.backup"
      fi
      rm -rf "$file.age"
      age -e -R "$workspace"/age_recipients.txt -o "$file.age" "$file"
    fi
  done <secret_file_list.txt
  cd "$dir";
}

function decrypt_secrets() {
  workspace="$(git rev-parse --show-toplevel)";
  dir="$(pwd)";
  cd "$workspace";
  while read -r file; do
    if [ -f "$file.age" ]; then
      rm -rf "$file"
      echo "$AGE_SECRET_KEY" | age -d -i - -o "$file" "$file.age"
    fi
  done <secret_file_list.txt
  cd "$dir"
}

function encrypt_file() {
  workspace="$(git rev-parse --show-toplevel)";
  dir="$(pwd)";
  echo "enter file to encrypt:";
  while read -r file; do
    if [ ! -f "$file" ]; then echo 'file not found'; exit 1; fi
    echo "encrypting $file as $file.age";
    if [ -f "$file.backup.age" ]; then
      if [ -f "$file.age" ]; then
        echo "found $file.backup.age, so saving $file.age as $file.backup.age"
        rm -f "$file.backup.age"
        cp "$file.age" "$file.backup.age"
      fi
    fi
    rm -f "$file.age"
    age -e -R "$workspace"/age_recipients.txt -o "$file.age" "$file";
    break;
  done <"${1:-/dev/stdin}"
}